---
title: "An overview of the Indian Economy"
author: "Ayush Patel"
date: "August 25, 2023"
subtitle: "Macro Aggregates, Industries and Trade"
format: 
  revealjs:
    embed-resources: true
    slide-number: c/t
    width: 1400
    theme: [serif, theme.scss]
execute: 
  echo: false
  warning: false
---


```{r libraries}
library(here) # directories management
library(dplyr) # data wrangling
library(tidyr) # data wrangling
library(highcharter) # interactive data viz

```

```{r loaddata}

# data for comparison of the peer marco agg
data_block_core_macro <- readr::read_csv(
  "data/neighbours data gdp gni gdp growth.csv"
)|>
  janitor::clean_names()

names_neighbours_iso3c <- c("AFG","BGD","PAK","IND",
                            "CHN","BTN","MMR","NPL","LKA")

# data for flow of resources to the commercial sector

data_flow_resource <- readr::read_csv("data/flow of resources to commercial sector.csv")|>
  janitor::remove_empty(which = "rows")

# data for gross bank credit to industries

data_bank_credit_industries <- readr::read_csv(
  "data/gross deployment of credit to industries.csv"
)|>
  filter(stringr::str_length(srn)<=4)|>
  select(-srn)|>
  mutate(
    industry = forcats::fct_reorder(
      forcats::as_factor(industry),
      `2021-22`
    )
  )|>
  pivot_longer(cols = -industry,
               names_to = "year",
               values_to = "INR")|>
  mutate(
    INR = INR/100
  )

# data for trade balance

data_trade_balance <- readr::read_csv("data/trade balance.csv")|>
  pivot_longer(cols = -Year,
               names_to = "group",
               values_to = "INR")|>
  mutate(
    INR = INR/100,
    group = case_when(
      group == "exp_oils" ~ "Oil Exports",
      group == "exp_non_oils" ~ "Non-Oil Exports",
      group == "exp_total" ~ "Total Exports",
      group == "imp_oil" ~ "Oil Imports",
      group == "imp_non_oils" ~ "Non-Oil Imports",
      group == "imp_total" ~ "Total Imports",
      group == "tb_oils" ~ "Oil Trade Balance",
      group == "tb_non_oils" ~ "Non-Oil Trade Balance",
      group == "tb_total" ~ "Total Trade Balance"
      
    )
  )

# flow of trade data

data_flow_trade <- readr::read_csv("data/flow of trade.csv")|>
  pivot_longer(cols = - country,
               names_to = "year_exim",
               values_to =  "usd_mil")|>
  mutate(
    flow = stringr::str_extract(year_exim,
                                ".+(?=_)"),
    year = stringr::str_extract(year_exim,
                                "(?<=_).+")
  )

```

```{r block-comp-charts-gdp}

# GDP of neighbours

data_block_core_macro |>
  filter(country_code %in% names_neighbours_iso3c)|>
  filter(indicator_name == "GDP (current US$)")|>
  pivot_longer(cols = 5:67,
               names_to = "year",values_to = "gdp")|>
  mutate(
    year = as.numeric(
      stringr::str_remove_all(year,"x")
    )
  )|>
  hchart(type = "spline",
         hcaes(x = year, y = gdp,
               name = paste(indicator_name,year),
                  group = country_name))|>
  hc_title(
    text = "GDP (Current USD) - India and it's neighbours"
  )|>
  hc_caption(
    text = "Data: World Bank - World Development Indicators"
  )|>
  hc_yAxis(
    title = list(
      text = "GDP in current USD"
    )
  )|>
   hc_xAxis(
    title = list(
      text = "Year"
    )
  )|>
  highcharter::hc_chart(zoomType = "x")-> comp_block_gdp

# GDP growth of neighbours

data_block_core_macro |>
  filter(country_code %in% names_neighbours_iso3c)|>
  filter(indicator_name == "GDP growth (annual %)")|>
  pivot_longer(cols = 5:67,
               names_to = "year",values_to = "gdp_grw")|>
  mutate(
    year = as.numeric(
      stringr::str_remove_all(year,"x")
    )
  )|>
  hchart(type = "spline",
         hcaes(x = year, y = gdp_grw,
               name = paste(indicator_name,year),
                  group = country_name))|>
  hc_title(
    text = "Annual GDP Growth (%) - India and it's neighbours"
  )|>
  hc_caption(
    text = "Data: World Bank - World Development Indicators"
  )|>
  hc_yAxis(
    title = list(
      text = "Percentage GDP Growth"
    )
  )|>
   hc_xAxis(
    title = list(
      text = "Year"
    )
  )|>
  highcharter::hc_chart(zoomType = "x")-> comp_block_gdp_grw

# GNI per capita of neighbours

data_block_core_macro |>
  filter(country_code %in% names_neighbours_iso3c)|>
  filter(indicator_name == "GNI per capita, PPP (current international $)")|>
  pivot_longer(cols = 5:67,
               names_to = "year",values_to = "gni")|>
  mutate(
    year = as.numeric(
      stringr::str_remove_all(year,"x")
    )
  )|>
  filter(year >= 1990)|>
  hchart(type = "spline",
         hcaes(x = year, y = gni,
               name = paste(indicator_name,year),
                  group = country_name))|>
  hc_title(
    text = "GNI per capita, PPP (current international $)"
  )|>
  hc_caption(
    text = "Data: World Bank - World Development Indicators"
  )|>
  hc_yAxis(
    title = list(
      text = "Per capita GNI in current USD, PPP"
    )
  )|>
   hc_xAxis(
    title = list(
      text = "Year"
    )
  )|>
  highcharter::hc_chart(zoomType = "x")-> comp_block_gni

```

```{r block-comp-charts-exim}

# Exports of neighbours

data_block_core_macro |>
  filter(country_code %in% names_neighbours_iso3c)|>
  filter(indicator_name == "Exports of goods and services (% of GDP)")|>
  pivot_longer(cols = 5:67,
               names_to = "year",values_to = "exp")|>
  mutate(
    year = as.numeric(
      stringr::str_remove_all(year,"x")
    )
  )|>
  hchart(type = "spline",
         hcaes(x = year, y = exp,
               name = paste(indicator_name,year),
                  group = country_name))|>
  hc_title(
    text = "Exports as % of GDP- India and it's neighbours"
  )|>
  hc_caption(
    text = "Data: World Bank - World Development Indicators"
  )|>
  hc_yAxis(
    title = list(
      text = "Percentage of GDP"
    )
  )|>
   hc_xAxis(
    title = list(
      text = "Year"
    )
  )|>
  highcharter::hc_chart(zoomType = "x")-> comp_block_exp

# imports of neighbours

data_block_core_macro |>
  filter(country_code %in% names_neighbours_iso3c)|>
  filter(indicator_name == "Imports of goods and services (% of GDP)")|>
  pivot_longer(cols = 5:67,
               names_to = "year",values_to = "imp")|>
  mutate(
    year = as.numeric(
      stringr::str_remove_all(year,"x")
    )
  )|>
  hchart(type = "spline",
         hcaes(x = year, y = imp,
               name = paste(indicator_name,year),
                  group = country_name))|>
  hc_title(
    text = "Imports as a % of GDP- India and it's neighbours"
  )|>
  hc_caption(
    text = "Data: World Bank - World Development Indicators"
  )|>
  hc_yAxis(
    title = list(
      text = "Percentage of GDP"
    )
  )|>
   hc_xAxis(
    title = list(
      text = "Year"
    )
  )|>
  highcharter::hc_chart(zoomType = "x")-> comp_block_imp

```


## Hello

::::{.columns}

:::{.column width="70%"}
[I am Ayush.]{.fragment fragment-index="1" style="font-size:45px"}


[I am a researcher working at the intersection of data, law, development and economics.]{.fragment fragment-index="2" style="font-size:25px"} 

[I teach Data Science using R at Gokhale Institute of Politics and Economics.]{.fragment fragment-index="3" style="font-size:25px"} 

[I am a [RStudio (Posit) certified tidyverse Instructor.](https://education.rstudio.com/trainers/people/patel+ayush/)]{.fragment fragment-index="4" style="font-size:25px"} 

[I am a Researcher at [Oxford Poverty and Human development Initiative (OPHI)](https://ophi.org.uk/), at the University of Oxford.]{.fragment fragment-index="5" style="font-size:25px"} 
:::

:::{.column width="30%"}

__Reach me__

{{< fa solid envelope >}} [ayush.ap58@gmail.com]{style="font-size:25px"}

{{< fa solid envelope >}} [ayush.patel@gipe.ac.in]{style="font-size:25px"}

:::

::::

## Topics and Flow{.center}

  + Macro Aggregates of Indian Economy
  + Industries in India and other sectors
  + Trade 
  
:::{.notes}

1. in macro aggregates, provide comparison with neighbours and peers

2. Provide details on major industries, credit flows to industries and value addition by industries

3. Major commodities in India and major partners

:::
  
## Macro Aggregates of the Indian Economy{.center}

## India in numbers - some basic facts{.smaller}


  + India is home to more than 1.4 billion people^[see [U.N. 2022 revision](https://www.un.org/development/desa/pd/sites/www.un.org.development.desa.pd/files/wpp2022_summary_of_results.pdf)].
  + India is among the top 5 largest economies (3.38 trillion USD) in the world.^[see table on [World Bank data bak](https://data.worldbank.org/indicator/NY.GDP.MKTP.CD?end=2022&most_recent_value_desc=true&start=2022&view=bar)] 
  + With USD 2,380 GNI per capita (same PPP for USD8210) India falls under the Lower-Middle Income classification of the World Bank.^[see [WB Income Classification](https://blogs.worldbank.org/opendata/new-world-bank-group-country-classifications-income-level-fy24)]
  + OPHI reports an MPI of 0.069 for India with 16.39% Headcount of multidimensionally poor and 41.98% Intensity of poverty.^[see [OPHI Databank](https://trainingidn.shinyapps.io/OPHIDataBankGlobalComparison/)]

__A broader comparison with its neighbours and peers is need to better situate the Indian Economy on a global stage.__

## A comparison around the block{.center}

India shares boundaries with Afghanistan, Bangladesh, Bhutan, China, Myanmar, Nepal, Pakistan, and Sri Lanka. Between these sub-continental neighbours there are old economic and cultural ties. 

_Additionally, Sri Lanka, Pakistan, Nepal, Bangladesh and India are also classified as lower-middle income countries by the World Bank_

We explore and compare core macro indicators of these countries.

## GDP and GNI per capita - The Neighbours

```{r block-show-gdp}
#| layout-nrow: 1
#| fig-height: 6

comp_block_gdp

comp_block_gni
```

## Export & Imports - The Neighbours

```{r block-show-exim}
#| layout-nrow: 1
#| fig-height: 6

comp_block_exp

comp_block_imp
```

## Closer look at the Indian Industries {.center}

## What sector produces most Value?

```{r componenets-gva}
#| layout-nrow: 2
#| fig-width: 13
#| fig-height: 3.5

tibble::tribble(
                                                                               ~`Item`,      ~`2015-16`,      ~`2016-17`,      ~`2017-18`,      ~`2018-19`,      ~`2019-20`,      ~`2020-21`,      ~`2021-22`,
                                                "Agriculture, Forestry and Fishing",  1616146L,  1726004L,  1840023L,  1878598L,  1982303L,  2048032L,  2109697L,
                                                                         "Industry",  2445981L,  2650508L,  2811690L,  2449954L,  2883735L,  2831536L,  3110404L,
                                                               "Mining & Quarrying",   317974L,   349248L,   329612L,   326815L,   321766L,   294024L,   327984L,
                                                                    "Manufacturing",  1903850L,  2054764L,  2209428L,  2328992L,  2261294L,  2247740L,  2470822L,
                          "Electricity, Gas, Water Supply & Other Utility Services",   224158L,   246496L,   272650L,   294147L,   300675L,   289771L,   311598L,
                                                                         "Services",  6429743L,  6951772L,  7382458L,  7905246L,  8353438L,  7705506L,  8385373L,
                                                                     "Construction",   865335L,   916445L,   964306L,  1026789L,  1038680L,   962835L,  1073595L,
     "Trade, Hotels, Transport, Communication and Services Related to Broadcasting",  1992825L,  2146379L,  2368419L,  2538757L,  2689726L,  2147679L,  2385605L,
                                   "Financial, Real Estate & Professional Services",  2294787L,  2492967L,  2537190L,  2714222L,  2897393L,  2961910L,  3087360L,
                                "Public Administration, Defence and Other Services",  1276797L,  1395982L,  1512542L,  1625477L,  1727639L,  1633081L,  1838814L,
                                                              "GVA at Basic Prices", 10491870L, 11328285L, 12034171L, 12733798L, 13219476L, 12585074L, 13605474L
     )|>
  mutate(
    Item = forcats::fct_reorder(forcats::as_factor(Item),
                                `2021-22`)
  )|>
  pivot_longer(cols = -Item,names_to = "year",values_to = "INR")|>
  filter(Item != "GVA at Basic Prices")|>
  mutate(
    INR = INR/100
  )-> data_components_gva
  
# show absolute values of components of GVA
data_components_gva|>
hchart(type = "area", hcaes(x = year, y = INR, group = Item))|>
  hc_plotOptions(
    area = list(
      stacking = "nornmal"
    )
  )|>
  hc_tooltip(
    shared = T
  )|>
  hc_title(
    text = "Components of GVA at Basic Prices"
  )|>
  hc_subtitle(
    text = "(Base Year 2011-12) Constant Prices"
  )|>
  hc_yAxis(
    title = list(
      text = "Billion INR"
    ),
    labels = list(
      format = "{value}B"
    )
  )|>
  hc_caption(
    text = "Data: NSO"
  )|>
  hc_legend(
        align = 'right',
        floating = F,
        layout = "proximate"
  ) |>
  highcharter::hc_chart(zoomType = "x")-> abs_components_gva

# Show relative values of components of GVA
data_components_gva|>
hchart(type = "area", hcaes(x = year, y = INR, group = Item))|>
  hc_plotOptions(
    area = list(
      stacking = "percent"
    )
  )|>
  hc_yAxis(
    title = list(
      text = "Percentage of GVA"
    ),
    labels = list(
      format = "{value}%"
    )
  )|>
  hc_tooltip(
    shared = T,
    pointFormat = '<span style="color:{series.color}">{series.name}</span>: <b>{point.percentage:.1f}%</b> ({point.y:.1f})<br/>'
  )|>
  hc_title(
    text = "Components of GVA at Basic Prices"
  )|>
  hc_subtitle(
    text = "(Base Year 2011-12) Constant Prices"
  )|>
  hc_legend(
        align = 'right',
        floating = F,
        layout = "proximate"
  )|>
  highcharter::hc_chart(zoomType = "x")-> rel_components_gva

abs_components_gva

rel_components_gva
```

## Components of the GDP

```{r components-gdp}
#| layout-nrow: 2
#| fig-width: 13
#| fig-height: 3.5


tibble::tribble(
                                            ~`Item`,      ~`2015-16`,      ~`2016-17`,      ~`2017-18`,      ~`2018-19`,      ~`2019-20`,      ~`2020-21`,      ~`2021-22`,
        "Private Final Consumption Expenditure", 6381419L, 6900236L, 7330728L, 7850444L, 8259704L, 7763734L, 8377854L,
     "Government Final Consumption Expenditure", 1132802L, 1201598L, 1344843L, 1434945L, 1484272L, 1537603L, 1577132L,
                "Gross Fixed Capital Formation", 3492183L, 3787568L, 4083079L, 4540509L, 4611021L, 4131279L, 4784054L,
                            "Changes in Stocks",  239557L,  122639L,  206436L,  262771L,  108284L,  -11573L,  187937L,
                                    "Valuables",  185986L,  151479L,  212307L,  191704L,  164527L,  207980L,  295046L,
                "Exports of Goods and Services", 2370282L, 2488423L, 2602012L, 2912480L, 2813609L, 2553683L, 3174844L,
                 "Import of Goods and Services", 2511540L, 2621593L, 3078274L, 3349861L, 3321586L, 2862871L, 3878193L,
                                "Discrepancies",   78804L,  277844L,  443451L,  149920L,  396125L,  238638L,  216842L
     )|>
  mutate(
    Item = forcats::fct_reorder(forcats::as_factor(Item),
                                `2021-22`)
  )|>
  pivot_longer(cols = -Item,names_to = "year",values_to = "INR")|>
  mutate(
    INR = INR/100
  )-> data_components_gdp
  
# show absolute values of components of GDP
data_components_gdp|>
hchart(type = "area", hcaes(x = year, y = INR, group = Item))|>
  hc_plotOptions(
    area = list(
      stacking = "nornmal"
    )
  )|>
  hc_tooltip(
    shared = T
  )|>
  hc_title(
    text = "Components of GDP at Basic Prices"
  )|>
  hc_subtitle(
    text = "(Base Year 2011-12) Constant Prices"
  )|>
  hc_yAxis(
    title = list(
      text = "Billion INR"
    ),
    labels = list(
      format = "{value}B"
    )
  )|>
  hc_caption(
    text = "Data: NSO"
  )|>
  hc_legend(
        align = 'right',
        floating = F,
        layout = "proximate"
  )|>
  highcharter::hc_chart(zoomType = "x")-> abs_components_gdp

# Show relative values of components of GDP
data_components_gdp|>
hchart(type = "area", hcaes(x = year, y = INR, group = Item))|>
  hc_plotOptions(
    area = list(
      stacking = "percent"
    )
  )|>
  hc_yAxis(
    title = list(
      text = "Percentage of GDP"
    ),
    labels = list(
      format = "{value}%"
    )
  )|>
  hc_tooltip(
    shared = T,
    pointFormat = '<span style="color:{series.color}">{series.name}</span>: <b>{point.percentage:.1f}%</b> ({point.y:.1f})<br/>'
  )|>
  hc_title(
    text = "Components of GDP at Basic Prices"
  )|>
  hc_subtitle(
    text = "(Base Year 2011-12) Constant Prices"
  )|>
  hc_legend(
        align = 'right',
        floating = F,
        layout = "proximate"
  )|>
  highcharter::hc_chart(zoomType = "x") -> rel_components_gdp

abs_components_gdp

rel_components_gdp
```

## Is there trust? {.center}

Generally, investments and deployment of resources show level of trust in an economic activity.

## Flow of Resources to Commercial Sector

```{r flow-resource}
#| layout-nrow: 2
#| fig-width: 13
#| fig-height: 3.5

data_flow_resource|>
  select(1:12)|>
  mutate(
    source = forcats::fct_reorder(
      forcats::as_factor(source),
                                `2021-22`)
  )|>
  pivot_longer(cols = -source,
               names_to = "year",
               values_to = "INR")|>
  mutate(
    INR = INR/100
  )-> data_flow_resource

# show absolute flow of resources to commercial sector
data_flow_resource|>
hchart(type = "area", hcaes(x = year, y = INR, 
                            group = source))|>
  hc_plotOptions(
    area = list(
      stacking = "nornmal"
    )
  )|>
  hc_tooltip(
    shared = T
  )|>
  hc_title(
    text = "Flow of Resources to Commercial Sector"
  )|>
  hc_subtitle(
    text = "2021-22 data is provisional"
  )|>
  hc_yAxis(
    title = list(
      text = "Billion INR"
    ),
    labels = list(
      format = "{value}B"
    )
  )|>
  hc_caption(
    text = "Source: RBI, SEBI, BSE, NSE, Merchant Banks, LIC and NHB.											
"
  )|>
  hc_legend(
        align = 'right',
        floating = F,
        layout = "proximate"
  )|>
  highcharter::hc_chart(zoomType = "x") -> abs_flow

# show relative flow of resources to commercial sector
data_flow_resource|>
hchart(type = "area", hcaes(x = year, y = INR, 
                            group = source))|>
  hc_plotOptions(
    area = list(
      stacking = "percent"
    )
  )|>
  hc_yAxis(
    title = list(
      text = "Percentage of total resource deployed"
    ),
    labels = list(
      format = "{value}%"
    )
  )|>
  hc_tooltip(
    shared = T,
    pointFormat = '<span style="color:{series.color}">{series.name}</span>: <b>{point.percentage:.1f}%</b> ({point.y:.1f})<br/>'
  )|>
  hc_title(
    text = "Flow of Resources to Commercial Sector"
  )|>
  hc_subtitle(
    text = "data for 2021 is provisional"
  )|>
  hc_legend(
        align = 'right',
        floating = F,
        layout = "proximate"
  )|>
  highcharter::hc_chart(zoomType = "x") -> rel_flow

abs_flow

rel_flow

```

## Gross Bank Credit to Industries{.scrollable}

```{r gross-bank-abs}
#| fig-width: 14
#| fig-height: 6


# show absolute gross bank credit
data_bank_credit_industries|>
hchart(type = "area", hcaes(x = year, y = INR, 
                            group = industry))|>
  hc_plotOptions(
    area = list(
      stacking = "normal"
    )
  )|>
  hc_tooltip(
    shared = T
  )|>
  hc_title(
    text = "Gross Bank Credit to Industries"
  )|>
  hc_subtitle(
    text = "Data is provisional"
  )|>
  hc_yAxis(
    title = list(
      text = "Billion INR"
    ),
    labels = list(
      format = "{value}B"
    )
  )|>
  hc_caption(
    text = "Source: RBI."
  )|>
  hc_legend(
        align = 'right',
        floating = F,
        layout = "proximate"
  )|>
  highcharter::hc_chart(zoomType = "x")-> abs_gross

# show relative gross bank credit
data_bank_credit_industries|>
hchart(type = "area", hcaes(x = year, y = INR, 
                            group = industry))|>
  hc_plotOptions(
    area = list(
      stacking = "percent"
    )
  )|>
  hc_yAxis(
    title = list(
      text = "Percentage of total gross bank credit"
    ),
    labels = list(
      format = "{value}%"
    )
  )|>
  hc_tooltip(
    shared = T,
    pointFormat = '<span style="color:{series.color}">{series.name}</span>: <b>{point.percentage:.1f}%</b> ({point.y:.1f})<br/>'
  )|>
  hc_title(
    text = "Gross Bank Credit to Industries"
  )|>
  hc_subtitle(
    text = "Data is provisional"
  )|>
  hc_legend(
        align = 'right',
        floating = F,
        layout = "proximate"
  )|>
  highcharter::hc_chart(zoomType = "x") -> rel_gross

abs_gross

rel_gross

```

## Trade{.center}

##  Historical Trade Balance  - India

```{r tradebalance}
#| fig-width: 14
#| fig-height: 6.5

# show absolute trade balance
data_trade_balance|>
  filter(!stringr::str_detect(group,"Total"))|>
  filter(!stringr::str_detect(group,"Balance"))|>
  mutate(
    group = forcats::fct_reorder(
      forcats::as_factor(group),
      INR
    )
  )|>
hchart(type = "area", hcaes(x = Year, y = INR, 
                            group = group))|>
  hc_plotOptions(
    area = list(
      stacking = "nornmal"
    )
  )|>
  hc_tooltip(
    shared = T
  )|>
  hc_title(
    text = "Historical Trade Balance"
  )|>
  hc_subtitle(
    text = "2021-22 data is provisional"
  )|>
  hc_yAxis(
    title = list(
      text = "Billion INR"
    ),
    labels = list(
      format = "{value}B"
    )
  )|>
  hc_caption(
    text = "Source : Directorate General of Commercial Intelligence and Statistics."
  )|>
  hc_legend(
        align = 'right',
        floating = F,
        layout = "proximate"
  )|>
  highcharter::hc_chart(zoomType = "x") -> abs_tb

abs_tb

```

## Flow of trade 2017-18

```{r flow17}
#| fig-width: 14
#| fig-height: 6.5

  data_flow_trade|>
  filter(year == "17-18")|>
  pivot_wider(names_from = flow,
              values_from = usd_mil,
              values_fill = 0)|>
group_by(country)|>
  summarise(
    exp = sum(exp),
    imp = sum(imp)
  )|>
  ungroup()|>
  mutate(
    diff = imp-exp
  )|>
  arrange(diff)|>
  hchart(type = "dumbbell",
         hcaes(x =country,high = imp,low = exp))|>
  hc_yAxis(
    title = list(
      text = "Distance between Imports and Exports in USD"
    )
  )|>
  hc_title(
    text = "India Flow of trade with major countries"
  )|>
  hc_tooltip(
    pointFormat = '<span style="color:skyblue"><strong>Imports</strong></span>:{point.imp}<br><span style="color:black"><strong>Exports</strong></span>:{point.exp}'
  )

```


## Flow of trade 2018-19

```{r flow18}
#| fig-width: 14
#| fig-height: 6.5

  data_flow_trade|>
  filter(year == "18-19")|>
  pivot_wider(names_from = flow,
              values_from = usd_mil,
              values_fill = 0)|>
group_by(country)|>
  summarise(
    exp = sum(exp),
    imp = sum(imp)
  )|>
  ungroup()|>
  mutate(
    diff = imp-exp
  )|>
  arrange(diff)|>
  hchart(type = "dumbbell",
         hcaes(x =country,high = imp,low = exp))|>
  hc_yAxis(
    title = list(
      text = "Distance between Imports and Exports in USD"
    )
  )|>
  hc_title(
    text = "India Flow of trade with major countries"
  )|>
  hc_tooltip(
    pointFormat = '<span style="color:skyblue"><strong>Imports</strong></span>:{point.imp}<br><span style="color:black"><strong>Exports</strong></span>:{point.exp}'
  )

```


## Flow of trade 2019-20

```{r flow19}
#| fig-width: 14
#| fig-height: 6.5

  data_flow_trade|>
  filter(year == "19-20")|>
  pivot_wider(names_from = flow,
              values_from = usd_mil,
              values_fill = 0)|>
group_by(country)|>
  summarise(
    exp = sum(exp),
    imp = sum(imp)
  )|>
  ungroup()|>
  mutate(
    diff = imp-exp
  )|>
  arrange(diff)|>
  hchart(type = "dumbbell",
         hcaes(x =country,high = imp,low = exp))|>
  hc_yAxis(
    title = list(
      text = "Distance between Imports and Exports in USD"
    )
  )|>
  hc_title(
    text = "India Flow of trade with major countries"
  )|>
  hc_tooltip(
    pointFormat = '<span style="color:skyblue"><strong>Imports</strong></span>:{point.imp}<br><span style="color:black"><strong>Exports</strong></span>:{point.exp}'
  )

```


## Flow of trade 2020-21

```{r flow20}
#| fig-width: 14
#| fig-height: 6.5

  data_flow_trade|>
  filter(year == "20-21")|>
  pivot_wider(names_from = flow,
              values_from = usd_mil,
              values_fill = 0)|>
group_by(country)|>
  summarise(
    exp = sum(exp),
    imp = sum(imp)
  )|>
  ungroup()|>
  mutate(
    diff = imp-exp
  )|>
  arrange(diff)|>
  hchart(type = "dumbbell",
         hcaes(x =country,high = imp,low = exp))|>
  hc_yAxis(
    title = list(
      text = "Distance between Imports and Exports in USD"
    )
  )|>
  hc_title(
    text = "India Flow of trade with major countries"
  )|>
  hc_tooltip(
    pointFormat = '<span style="color:skyblue"><strong>Imports</strong></span>:{point.imp}<br><span style="color:black"><strong>Exports</strong></span>:{point.exp}'
  )

```


## Flow of trade 2021-22

```{r flow21}
#| fig-width: 14
#| fig-height: 6.5

  data_flow_trade|>
  filter(year == "21-22")|>
  pivot_wider(names_from = flow,
              values_from = usd_mil,
              values_fill = 0)|>
group_by(country)|>
  summarise(
    exp = sum(exp),
    imp = sum(imp)
  )|>
  ungroup()|>
  mutate(
    diff = imp-exp
  )|>
  arrange(diff)|>
  hchart(type = "dumbbell",
         hcaes(x =country,high = imp,low = exp))|>
  hc_yAxis(
    title = list(
      text = "Distance between Imports and Exports in USD"
    )
  )|>
  hc_title(
    text = "India Flow of trade with major countries"
  )|>
  hc_tooltip(
    pointFormat = '<span style="color:skyblue"><strong>Imports</strong></span>:{point.imp}<br><span style="color:black"><strong>Exports</strong></span>:{point.exp}'
  )

```

## Flow of trade with South Korea

```{r}
#| fig-width: 14
#| fig-height: 6.5

data_flow_trade|>
  filter(country == "South Korea")|>
  mutate(
    flow = case_when(
      flow == "exp" ~ "Exports to S.Korea",
      T ~ "Imports from S.Korea"
    )
  )|>
  hchart(type = "spline", 
         hcaes(x =year,y=usd_mil,group = flow))|>
  hc_title(
    text = "Trade Balance with South Korea"
  )|>
  hc_yAxis(
    title = list(
      text = "USD Million"
    )
  )|>
  hc_tooltip(
    shared = T
  )|>
  hc_caption(
    text = "Source : Directorate General of Commercial Intelligence and statistics."
  )

```

